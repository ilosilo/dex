main:

<div className="footer" style={{ display: 'flex', backgroundColor: 'lightgrey', width: 360, height: 30 }}> width = {this.state.width} height = {this.state.height} </div>
fst main:::
<ToolBar height={500} width={50} visible={true}/>
 return (
      <div className="App" style={{ width: this.state.width, height: this.state.height, display: 'flex', flexDirection: 'column' }}>
        <div className="header"
          style={{
            borderBottom: '3px inset #e5e5e5',
            display: 'flex',
            flexDirection: 'row',
            color: 'black',
            width: this.state.width,
            height: this.state.height < 600 ? 30 : this.state.height * 5 / 100
          }}>
          <div style={{ margin: 5, marginRight: 15 }}><AiOutlineMenu style={{ height: this.state.height < 600 ? 25 : this.state.height * 4 / 100, width: this.state.height < 600 ? 25 : this.state.height * 4 / 100 }} /></div>
          <div style={{ margin: 5, marginRight: 15, display: 'flex', alignItems: 'center' }}><text style={{ fontFamily: 'sans-serif', fontWeight: 'bold' }}>Geovision Scheduler</text></div>
          <div onClick={() => this.setState({calendarVisible:true})}style={{ margin: 5, display: 'flex', alignItems: 'center' }}><FcCalendar style={{ height: this.state.height < 600 ? 20 : this.state.height * 3 / 100, width: this.state.height < 600 ? 20 : this.state.height * 3 / 100 }} /></div>
          <div onClick={() => this.setState({mapVisible:true})} style={{ margin: 5, display: 'flex', alignItems: 'center' }}><RiRoadMapLine style={{ height: this.state.height < 600 ? 20 : this.state.height * 3 / 100, width: this.state.height < 600 ? 20 : this.state.height * 3 / 100 }} /></div>
        </div>
        <div className="body"
          style={{
            height: this.state.height * 90 / 100,
            width: (this.state.width > this.state.height * 1.75) ? this.state.height * 1.75 : this.state.width,
            alignSelf: 'center',
            display: 'flex',
            flexDirection: 'row'
          }}>
          
          <div className="content" style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>
            {this.state.mapVisible &&
              <div className="mapArea"
                style={{
                  width: '100%', height: this.state.calendarVisible ? '50%' : '100%',
                  backgroundColor: '#f2efee'
                }}>
                   <div style={{display:'flex',width:'100%', height:40, backgroundColor:'white', justifyContent:'center'}}>
                    <div style={{backgroundColor:'#eef2ef', height:20, padding:5,marginTop:5, marginRight:7}}>day picker</div> 
                    <div style={{backgroundColor:'#eef2ef', height:20,padding:5, marginTop:5,marginRight:7}}>little infos will be here</div>
                    <div 
                    onClick={() => this.setState({mapVisible:false})}
                    style={{backgroundColor:'red', height:20, width:20, color:'white', borderRadius:10, position:'absolute' ,right:7}}>x</div>
                  </div>

                <img src={map} style={{ width: '100%', height: '100%' }}></img>

              </div>}
            {this.state.calendarVisible &&
              <div className="calendarArea"
                style={{
                  width: '100%', height: this.state.mapVisible ? '50%' : '100%',
                  backgroundColor: '#eef1f2'
                }}>
                  <div style={{display:'flex',width:'100%', height:40, backgroundColor:'white', justifyContent:'center'}}>
                    <div style={{backgroundColor:'#eef2ef', height:20, padding:5,marginTop:5, marginRight:7}}>day picker</div> 
                    <div style={{backgroundColor:'#eef2ef', height:20,padding:5, marginTop:5,marginRight:7}}>little infos will be here</div>
                    <div 
                    onClick={() => this.setState({calendarVisible:false})}
                    style={{backgroundColor:'red', height:20, width:20, color:'white', borderRadius:10, position:'absolute' ,right:7}}>x</div>
                  </div>
                <Calendar style={{ width: '100%', height: '100%' }} employees={employeeArray} time={timeShift} tasks={myTasks} pushArr={pushArr} />
              </div>}
          </div>
        </div>
        <div className="footer" style={{ display: 'flex', backgroundColor: 'lightgrey', width: 270, height: 30 }}> width = {this.state.width} height = {this.state.height} </div>
        {/*<Calendar employees = {employeeArray} time = {timeShift} tasks = {myTasks} pushArr={pushArr}/>
      <CalendarView employees = {employeeArray} time = {timeShift} tasks = {myTasks} pushArr={pushArr} />
    */}


      </div>
    );
-----------------------------------------------------------------------





                <div style={{border:'2px solid red'}}>
                    <div style={{ marginTop: "80px" }}>
                        <button onClick={() => this.setState({ x: this.state.x + this.state.delta })}>
                            Move Title To Right
                        </button>
                        <button onClick={() => this.setState({ y: this.state.y - this.state.delta })}>
                            Move Title To Up
                        </button>
                        <button onClick={() => this.setState({ x: this.state.x - this.state.delta })}>
                            Move Title To Left
                        </button>
                        <button onClick={() => this.setState({ y: this.state.y + this.state.delta })}>
                            Move Title To Down 
                        </button>

pixelsToHours = () => {
        //imlecin konumunun başlangıç saatine göre karlılığını hh:mm cinsinden string döndürür.
        var returnThis = '';
        let totalUnits = (this.props.x + 16) / this.props.k;
        let a = String(this.props.calendarBegin).split(':');
        let beginMins = parseInt(a[0]) * 60 + parseInt(a[1]);
        let sum = totalUnits + beginMins;
        if (sum / 60 < 10) {
            returnThis += '0' + String(parseInt(sum / 60));
        } else {
            returnThis += String(parseInt(sum / 60));
        }
        if (sum % 60 < 10) {
            returnThis += ':0' + String(parseInt(sum % 60));
        } else {
            returnThis += ':' + String(parseInt(sum % 60));
        }
        return returnThis;
    }




                    </div>
                </div>
                    <table style={{
                        border:'2px solid black', 
                        width:this.state.calendarWidth+'px',
                        height:this.state.calendarHeight+'px',
                        }}>
                    <div
                    style={{
                        position: 'relative',
                        left: this.state.x+(120*k)+'px',
                        top: this.state.y+(cellHeigth)+'px',
                        backgroundColor: 'blueviolet',
                    }}>
                    TEST k={k +' ' +this.state.calendarWidth/(60*this.state.countHours)}
                </div>
                        <thead>
                            <tr style={{ borderWidth: '1px', borderColor: '#FFFF00' }}>
                                <th className='cell'>
                                    users
                                </th>
                                {tableHeader}
                            </tr>
                        </thead>
                        {employees.map(person => (
                            <tr>
                                <th className='nameList'>{person /*task[3]+ ' '+ task[1] + ' '+ task[2] */}</th>
                                {
                                    tasks.map(task => (
                                        String(task[0]) === String(person)  
                                                ? <th>
                                                    <Task name={task[3]} description={task[4]} type={randomTypeGenerator()} begin={task[1]} end={task[2]} k={k} calendarBegin={time[1]+'00'}/> 
                                                </th> 
                                                : null
                                        ) 
                                    )
                                }
                            </tr>

                        ))}
                    </table>


                    